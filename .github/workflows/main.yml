# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Virtual env creation
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

  test:
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a set of commands using the runners shell
      - name:  Flake8
        run: |
          pip install flake8
          flake8 --exclude='.venv' --extend-ignore=E501
      - name: Pytest
        run: |
          pip install pytest-cov
          python -m pytest --doctest-modules --ignore=main.py --cov

  deploy-main:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "tpexcelia"
          heroku_email: "cedellec21@excelia-group.com"

  deploy-dev:
    needs: test
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'dev' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "tpexceliadev"
          heroku_email: "cedellec21@excelia-group.com"

  post_test-main:
    if: ${{ github.ref_name == 'main' }}
    needs: deploy-main
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name:  Test instance is up
        run: |
          pip install requests
          python -c "import requests; exit(1) if requests.get('https://tpexcelia.herokuapp.com/').status_code != 200 else exit(0)"

  post_test-dev:
    if: ${{ github.ref_name == 'dev' }}
    needs: deploy-dev
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name:  Test instance is up
        run: |
          pip install requests
          python -c "import requests; exit(1) if requests.get('https://tpexceliadev.herokuapp.com/').status_code != 200 else exit(0)"